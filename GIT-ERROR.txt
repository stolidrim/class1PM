import React from 'react';
import { Formik, Form, Field, ErrorMessage } from 'formik';
import * as Yup from 'Yup'

const FormValidation = () => {
    return <>


        <Formik
        initialValues={{ firstname: "", lastname: "", email: "", password: "", cPassword: "" }}
        validationSchema={Yup.object({
            firstname: Yup.string()
                .max(20, "First name cannot exceeds more than 20 characters.")
                .required("First name must be required"),
            lastname: Yup.string()
                .max(20, "First name cannot exceeds more than 20 characters.")
                .required("First name must be required"),
            email: Yup.string()
                .email("First name cannot exceeds more than 20 characters.")
                .required("First name must be required"),
            password: Yup.string()
                .matches(/(?=.*[a-zA-Z])(?=.*\d)(?=.*[@$!#*&^%]){8,}$/, "Must be contain 8 charter" )
                .required("Required field"),
            cPassowrd: Yup.string()
            .required('Required field')
            .oneOf([Yup.ref('password'),null], "Password and confirm must be match")
        })}
        
        >
            <div className='col-md-6 offset-md-3 p-3 shadow-lg mt-3'>
                <Form>
                    <div className='mb-3'>
                        <label htmlFor="firstname">First Name</label>
                        <Field type="text" name="firstname" className="form-control" />
                        <ErrorMessage name="firstname">
                            {msg => <div className='text-danger'>{msg}</div>}
                        </ErrorMessage>
                    </div>
                    <div className='mb-3'>
                        <label htmlFor="lastname">Last Name</label>
                        <Field type="text" name="lastname" className="form-control" />
                        <ErrorMessage name="lastname">
                            {msg => <div className='text-danger'>{msg}</div>}
                        </ErrorMessage>
                    </div>

                    <div className='mb-3'>
                        <label htmlFor="email">Email</label>
                        <Field type="email" name="email" className="form-control" />
                        <ErrorMessage name="email">
                            {msg => <div className='text-danger'>{msg}</div>}
                        </ErrorMessage>
                    </div>
                    <div className='mb-3'>
                        <label htmlFor="password">Password</label>
                        <Field type="password" name="password" className="form-control" />
                        <ErrorMessage name="password">
                            {msg => <div className='text-danger'>{msg}</div>}
                        </ErrorMessage>
                    </div>
                    <div className='mb-3'>
                        <label htmlFor="cPassowrd">Confirm Password</label>
                        <Field type="password" name="cPassowrd" className="form-control" />
                        <ErrorMessage name="cPassowrd">
                            {msg => <div className='text-danger'>{msg}</div>}
                        </ErrorMessage>
                    </div>

                    <div className='btn btn-primary' type="submit"> Register</div> 
                </Form>

            </div>


        </Formik>



        
    </>;
};

export default FormValidation;
